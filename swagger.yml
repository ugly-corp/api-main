openapi: 3.0.0
info:
  description: |
    api ugly dev
  version: "1.0.0"
  title: Ugly api
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/NookieNoo/ugly-api/1.0.0
  - url: "https://api.dev.ugly.gallery/api/v1/mobile"

tags:
  - name: post
    description: Посты
  - name: user
    description: Пользователи
  - name: category
    description: Категории
  - name: auth
    description: Авторизация
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Залогиниться
      description: Залогиниться
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInputParams'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
  /auth/logout:
    post:
      security:
        - Bearer: [ ]
      tags:
        - auth
      summary: Разлогиниться
      description: Разлогиниться
      operationId: logout
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logout"
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация
      description: Регистрация
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInputParams'
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Register"
  /post:
    get:
      parameters:
        - name: limit
          in: query
          description: Размер выборки
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Пропустить n страниц
          required: false
          schema:
            type: integer
      tags:
        - post
      summary: Получить посты
      description: Получить посты
      operationId: getPosts
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostGet"
  /post/{post_id}/like:
    post:
      security:
        - Bearer: [ ]
      tags:
        - post
      parameters:
        - name: post_id
          in: path
          description: ID поста
          required: true
          schema:
            type: integer
            format: int64
      summary: Поставить/снять лайк
      description: Поставить/снять лайк
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLikeBody'
      operationId: like
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostLike"
  /author:
    get:
      tags:
        - user
      summary: Получить всех авторов постов
      description: Получить всех авторов постов
      operationId: getAuthors
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorGet"
  /user/favourite:
    get:
      tags:
        - user
      summary: Получить все посты лайкнутые пользователем
      description: Получить все посты лайкнутые пользователем
      operationId: getFavouritePosts
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFavouritePostGet"
  /category:
    get:
      tags:
        - category
      summary: Получить все категории
      description: Получить все категории
      operationId: getCategories
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryGet"
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
  schemas:
    Login:
      type: object
      properties:
        data:
          type: "object"
          properties:
            user:
              $ref: "#/components/schemas/User"
            token:
              type: string
    Logout:
      type: array
    Register:
      type: object
      properties:
        data:
          type: "object"
          properties:
            user:
              $ref: "#/components/schemas/User"
            token:
              type: string
    LoginInputParams:
      type: object
      properties:
        email:
          type: string
        device_name:
          type: string
        password:
          type: string
    RegisterInputParams:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        device_name:
          type: string
        name:
          type: string
    PostGet:
      type: object
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Post"
        meta:
          $ref: "#/components/schemas/PaginationData"
    PostLike:
      type: object
      properties:
        success:
          type: "boolean"
    UserFavouritePostGet:
      type: object
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Post"
        meta:
          $ref: "#/components/schemas/PaginationData"
    UserLikeBody:
      type: object
      properties:
        is_liked:
          type: boolean
          required: true
    AuthorGet:
      type: object
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/User"
        meta:
          type: object
    CategoryGet:
      type: object
      properties:
        data:
          type: "array"
          items:
            $ref: "#/components/schemas/Category"
        meta:
          type: object
    Post:
      type: 'object'
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        views_counter:
          type: integer
        is_published:
          type: boolean
          default: true
        photo:
          type: string
        user:
#          type: object
          $ref: "#/components/schemas/User"
        categories:
          type: "array"
          items:
            $ref: "#/components/schemas/Category"
    User:
      type: 'object'
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        avatar:
          type: string
    Category:
      type: 'object'
      properties:
        id:
          type: integer
        name:
          type: string
        photo:
          type: string
    PaginationData:
      type: 'object'
      properties:
        current_page:
          type: integer
        from:
          type: integer
        last_page:
          type: integer
        per_page:
          type: integer
        to:
          type: integer
        total:
          type: integer
        page:
          type: integer
